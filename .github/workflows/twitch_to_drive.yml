name: Twitch → Drive (low-quality, 1h30, clean MP4)

on:
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          python3 -m pip install --upgrade pip
          pip install --upgrade yt-dlp
          curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Pick next URL from link.csv (avoid duplicates)
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          touch link.csv linkdalay.csv

          NEXT_URL=""
          while IFS= read -r line || [ -n "${line-}" ]; do
            url="$(printf '%s' "$line" | tr -d '\r' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
            [ -z "$url" ] && continue
            [[ "$url" =~ ^# ]] && continue
            if ! grep -Fqx -- "$url" linkdalay.csv; then
              NEXT_URL="$url"
              break
            fi
          done < link.csv

          if [ -z "$NEXT_URL" ]; then
            echo "selected_url=" >> $GITHUB_OUTPUT
            echo "Không còn link mới."
            exit 0
          fi

          echo "selected_url=$NEXT_URL" >> $GITHUB_OUTPUT
          echo "Chọn link: $NEXT_URL"

      - name: Stop if no URL
        if: ${{ steps.pick.outputs.selected_url == '' }}
        run: echo "DONE"

      - name: Configure rclone (Drive OAuth)
        if: ${{ steps.pick.outputs.selected_url != '' }}
        env:
          GDRIVE_OAUTH_TOKEN_JSON: ${{ secrets.GDRIVE_OAUTH_TOKEN_JSON }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          TEAM_DRIVE_ID: ${{ secrets.TEAM_DRIVE_ID }}
          GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
          GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}
        run: |
          set -e
          [ -n "$GDRIVE_OAUTH_TOKEN_JSON" ] || { echo "Thiếu GDRIVE_OAUTH_TOKEN_JSON"; exit 1; }
          TOKEN=$(printf "%s" "$GDRIVE_OAUTH_TOKEN_JSON" | tr -d '\n')

          {
            echo "[gdrive]"
            echo "type = drive"
            echo "scope = drive"
            [ -n "$GDRIVE_CLIENT_ID" ] && echo "client_id = $GDRIVE_CLIENT_ID"
            [ -n "$GDRIVE_CLIENT_SECRET" ] && echo "client_secret = $GDRIVE_CLIENT_SECRET"
            echo "token = $TOKEN"
            [ -n "$GDRIVE_FOLDER_ID" ] && echo "root_folder_id = ${GDRIVE_FOLDER_ID}"
            # đi vừa phải để bớt 429
            echo "pacer_min_sleep = 500ms"
            echo "pacer_burst = 5"
          } > rclone.conf

          [ -n "$TEAM_DRIVE_ID" ] && echo "team_drive = ${TEAM_DRIVE_ID}" >> rclone.conf
          chmod 600 rclone.conf

      - name: Preflight Drive
        if: ${{ steps.pick.outputs.selected_url != '' }}
        env:
          RCLONE_CONFIG: ${{ github.workspace }}/rclone.conf
        run: |
          set -e
          TMP="gdrive:__probe_$RANDOM"
          rclone mkdir "$TMP" --stats 5s --progress
          rclone purge "$TMP" || true

      - name: Download & transcode from Twitch → clean MP4 (1h30, lowest quality)
        if: ${{ steps.pick.outputs.selected_url != '' }}
        shell: bash
        env:
          URL: ${{ steps.pick.outputs.selected_url }}
        run: |
          set -euo pipefail
          mkdir -p out_final

          # 1) Lấy tên để đặt file
          NAME="$(yt-dlp --print "%(uploader)s_%(title).180B_%(id)s" "$URL" | head -n1)"
          SAFE="$(printf '%s' "$NAME" | tr -d '\n' | sed 's#[/<>:"\\|?*]#_#g')"
          OUT="out_final/${SAFE}.mp4"

          echo "[INFO] Output file: $OUT"

          # 2) Lấy URL chất lượng THẤP NHẤT để tải nhanh nhất
          #    "worst" = rẻ nhất Twitch cho bạn
          RAW_URLS=()
          mapfile -t RAW_URLS < <(yt-dlp -g -f "worst" "$URL")
          if [ "${#RAW_URLS[@]}" -eq 0 ]; then
            echo "Không lấy được URL HLS từ Twitch"; exit 1
          fi

          SRC="${RAW_URLS[0]}"

          echo "[INFO] Source (worst): $SRC"

          # 3) ffmpeg: hút 1h30 (01:30:00), scale 480p, H.264, AAC, mp4 sạch
          #    -loglevel info -stats để bạn THẤY tiến trình
          ffmpeg -hide_banner -loglevel info -stats \
            -ss 00:00:00 -i "$SRC" \
            -t 01:30:00 \
            -vf "scale=-2:480,fps=30" \
            -c:v libx264 -preset veryfast -profile:v high -level 4.1 -pix_fmt yuv420p -crf 24 \
            -c:a aac -b:a 128k -ac 2 -ar 48000 \
            -movflags +faststart \
            -max_muxing_queue_size 1024 \
            "$OUT"

          ls -lh out_final

      - name: Upload to Drive
        if: ${{ steps.pick.outputs.selected_url != '' }}
        env:
          RCLONE_CONFIG: ${{ github.workspace }}/rclone.conf
        run: |
          set -e
          # upload chậm chống 429, nhưng có progress
          rclone copy "out_final" "gdrive:" \
            --transfers 1 \
            --checkers 1 \
            --tpslimit 1 \
            --tpslimit-burst 1 \
            --drive-chunk-size 32M \
            --stats 10s \
            --progress \
            --retries 3 \
            --low-level-retries 10

          rm -rf out_final

      - name: Append processed link to linkdalay.csv & push
        if: ${{ steps.pick.outputs.selected_url != '' }}
        env:
          URL: ${{ steps.pick.outputs.selected_url }}
        run: |
          set -e
          grep -Fqx -- "$URL" linkdalay.csv || echo "$URL" >> linkdalay.csv
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add linkdalay.csv
          git commit -m "append processed twitch link: $URL [skip ci]" || echo "No changes."
          git push
